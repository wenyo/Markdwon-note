{"version":3,"sources":["context/NoteContext.tsx","context/BaseContext.tsx","json/Data.tsx","context/CategoryContext.tsx","components/category/List.tsx","components/category/Category.tsx","components/directory/Tool.tsx","components/directory/Item.tsx","components/directory/Items.tsx","components/directory/Filter.tsx","components/directory/Directory.tsx","components/note/Note.tsx","components/modal/Msg.tsx","components/modal/Modal.tsx","App.tsx","index.tsx"],"names":["sActiveType","vDefault","name","id","NoteContext","createContext","vData","setvData","x","iData","setiData","iActive","sType","chooseItem","idx","vCollection","setvCollection","Provider","Consumer","BaseContext","bModal","sModal","sModalTitle","setbModal","bMsg","sMsg","sMsgTitle","iMsgType","setiMsgType","setbMsg","setAlert","type","bAlert","0","collection","starred","trash","updated_date","created_date","content","1","2","3","4","5","CategoryContext","List","props","sTitle","Icon","vList","useContext","useState","bShow","setbShow","className","onClick","prevState","length","map","vIcon","Category","vStarr","setvStarr","vTrash","setvTrash","sNewCollection","setsNewCollection","ContexntValue","addCollection","vNewCollection","JSON","parse","stringify","iNewIdx","push","renewAlert","value","onChange","event","target","textCollection","useEffect","vNewStarr","vNewTrash","data","parseInt","src","alt","icon","Tool","faGithub","Item","title","bStarred","Items","vShowData","setvShowData","vNewData","Object","keys","filter","Filter","Directory","mdParser","MarkdownIt","breaks","Note","vAlue","setvAlue","style","height","width","renderHTML","text","render","e","html","split","handleEditorChange","Message","elMsg","document","getElementById","sEl","faCircleNotch","spin","faCheck","faTimes","faExclamation","createPortal","Modal","elModal","App","setsModal","setsModalTitle","setsMsg","setsMsgTitle","vDataDefault","setiActive","setsType","vBaseContext","sAlert","sAlertTitle","vContent","Msg","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.dc7d595d.chunk.js","sourcesContent":["import React, { createContext } from 'react';\nimport { DataType } from '../json/Data';\n\nexport interface vList {\n    name: string;\n    id: number;\n}\n\nexport enum sActiveType {\n    STARRED,\n    COLLECTIONS,\n    TRASH,\n    NONE,\n}\n\nexport const vDefault: vList[] = [\n    { name: 'Home', id: 0 },\n    { name: 'Work', id: 1 },\n    { name: 'Project', id: 2 },\n];\n\nconst NoteContext = createContext({\n    vData: {} as DataType,\n    setvData: (x: DataType) => {},\n    iData: -1,\n    setiData: (x: number) => {},\n    iActive: -1,\n    sType: sActiveType[0],\n    chooseItem: (sType: string, idx: number) => {},\n    vCollection: vDefault,\n    setvCollection: (x: vList[]) => {},\n});\n\nexport const { Provider, Consumer } = NoteContext;\nexport default NoteContext;\n","import React, { createContext } from 'react';\nconst BaseContext = createContext({\n    bModal: false,\n    sModal: <></>,\n    sModalTitle: '',\n    setbModal: (x: boolean) => {},\n\n    bMsg: false,\n    sMsg: <></>,\n    sMsgTitle: '',\n    iMsgType: 1,\n    setiMsgType: (x: number) => {},\n    setbMsg: (x: boolean) => {},\n    setAlert: (\n        type: string,\n        bAlert: boolean,\n        sAlert: JSX.Element = <></>,\n        sAlertTitle: string = '',\n        iMsgType: number = 1\n    ) => {},\n});\n\nexport const { Provider } = BaseContext;\nexport default BaseContext;\n","import React from 'react';\n\nexport interface DataType {\n    [x: number]: {\n        name: string;\n        collection: number; // use id , not name\n        starred: boolean;\n        trash: boolean;\n        updated_date: string;\n        created_date: string;\n        content: string;\n    };\n}\n\nexport const vCategory = ['Home', 'Work', 'Project'];\n\nexport const vData: DataType = {\n    0: {\n        name: 'Untitle note',\n        collection: 1,\n        starred: false,\n        trash: true,\n        updated_date: '2021/02/07 13:45',\n        created_date: '2021/02/01 11:00',\n        content: `# Untitle note \n## string`,\n    },\n    1: {\n        name: 'Note with star',\n        collection: 1,\n        starred: true,\n        trash: false,\n        updated_date: '2021/02/07 13:45',\n        created_date: '2021/02/01 11:00',\n        content: `# Note with star \n## string`,\n    },\n    2: {\n        name: 'Heading: The biggest title',\n        collection: 1,\n        starred: true,\n        trash: false,\n        updated_date: '2021/02/05 13:45',\n        created_date: '2021/02/04 11:00',\n        content: `# Heading: The biggest title \n## string`,\n    },\n    3: {\n        name: 'Untitle note',\n        collection: 2,\n        starred: false,\n        trash: true,\n        updated_date: '2021/02/03 13:45',\n        created_date: '2021/02/03 11:00',\n        content: `# Untitle note \n## string`,\n    },\n    4: {\n        name: 'Untitle note',\n        collection: 0,\n        starred: false,\n        trash: false,\n        updated_date: '2021/02/07 13:45',\n        created_date: '2021/02/01 11:00',\n        content: `# Untitle note \n## string`,\n    },\n    5: {\n        name: 'Untitle note5',\n        collection: 2,\n        starred: false,\n        trash: false,\n        updated_date: '2021/02/07 13:45',\n        created_date: '2021/02/01 11:00',\n        content: `# Untitle note \n## string`,\n    },\n};\n","import React, { createContext } from 'react';\nimport { vList } from './NoteContext';\n\nconst CategoryContext = createContext({\n    vCollection: [] as vList[],\n});\n\nexport const { Provider, Consumer } = CategoryContext;\nexport default CategoryContext;\n","import React, { useState, useContext } from 'react';\nimport NoteContext from '../../context/NoteContext';\n\nimport { ListInput } from './Category';\n\nconst List = (props: ListInput) => {\n    // props\n    const { sTitle, Icon, vList, iActive } = props;\n\n    //context\n    const { chooseItem } = useContext(NoteContext);\n\n    //state\n    const [bShow, setbShow] = useState<boolean>(true);\n\n    const clickShow = () => {\n        setbShow((prevState) => !prevState);\n    };\n\n    return (\n        <div className=\"List\">\n            <div className=\"vice-title\" onClick={clickShow}>\n                <h4>{sTitle}</h4>\n                {bShow ? <i className=\"icon-arrow-up\"></i> : <i className=\"icon-arrow-down\"></i>}\n            </div>\n            <ul>\n                {vList.length > 0 &&\n                    bShow &&\n                    vList.map((vList, idx) => (\n                        <li\n                            key={idx}\n                            onClick={() => chooseItem(sTitle, vList.id)}\n                            className={vList.id === iActive ? 'active' : ''}\n                        >\n                            {Icon}\n                            <span>{vList.name}</span>\n                        </li>\n                    ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default List;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Provider } from '../../context/CategoryContext';\nimport { vList } from '../../context/NoteContext';\nimport List from './List';\nimport NoteContext, { sActiveType } from '../../context/NoteContext';\nimport BaseContext from '../../context/BaseContext';\n\nconst vIcon = [<i className=\"icon-start\"></i>, <i className=\"icon-description\"></i>, <i className=\"icon-remove\"></i>];\n\nexport interface ListInput {\n    sTitle: string;\n    Icon: JSX.Element;\n    vList: vList[];\n    iActive: number;\n}\n\nconst Category = () => {\n    // context\n    const { setAlert, bModal } = useContext(BaseContext);\n    const { vData, iActive, sType, vCollection, setvCollection } = useContext(NoteContext);\n\n    // state\n    const [vStarr, setvStarr] = useState<vList[]>([]);\n    const [vTrash, setvTrash] = useState<vList[]>([]);\n    const [sNewCollection, setsNewCollection] = useState('');\n\n    const ContexntValue = {\n        vCollection,\n    };\n\n    const addCollection = () => {\n        if (sNewCollection === '') return;\n        let vNewCollection = JSON.parse(JSON.stringify(vCollection));\n        const iNewIdx = vNewCollection.length;\n        vNewCollection.push({ name: sNewCollection, id: iNewIdx });\n        setvCollection(vNewCollection);\n        setAlert('Modal', false);\n    };\n\n    const textCollection = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setsNewCollection(event.target.value);\n    };\n\n    const renewAlert = () => {\n        setAlert(\n            'Modal',\n            true,\n            <>\n                <input\n                    className=\"input-text\"\n                    type=\"text\"\n                    value={sNewCollection}\n                    onChange={(event) => textCollection(event)}\n                />\n                <button className=\"btn-outline\" onClick={addCollection}>\n                    SUBMIT\n                </button>\n            </>,\n            'New Collection'\n        );\n    };\n\n    const clickNewCollection = () => {\n        renewAlert();\n    };\n\n    useEffect(() => {\n        let vNewStarr: vList[] = [];\n        let vNewTrash: vList[] = [];\n        for (const id in vData) {\n            const data = vData[id];\n            if (data.trash) {\n                vNewTrash.push({ name: data.name, id: parseInt(id) });\n            } else if (data.starred) {\n                vNewStarr.push({ name: data.name, id: parseInt(id) });\n            }\n        }\n        setvTrash(vNewTrash);\n        setvStarr(vNewStarr);\n    }, []);\n\n    useEffect(() => {\n        if (bModal) {\n            renewAlert();\n        }\n    }, [sNewCollection]);\n\n    return (\n        <Provider value={ContexntValue}>\n            <div id=\"Category\">\n                <div className=\"title content\">\n                    <img src=\"img/Path 94.svg\" alt=\"\" />\n                    <label id=\"theme\">\n                        <input type=\"checkbox\" />\n                        <div></div>\n                    </label>\n                </div>\n                <div className=\"content scrollbarCol\">\n                    {vIcon.map((icon, idx) => (\n                        <List\n                            key={idx}\n                            sTitle={sActiveType[idx]}\n                            Icon={icon}\n                            vList={\n                                sActiveType[0] === sActiveType[idx]\n                                    ? vStarr\n                                    : sActiveType[1] === sActiveType[idx]\n                                    ? vCollection\n                                    : sActiveType[2] === sActiveType[idx]\n                                    ? vTrash\n                                    : []\n                            }\n                            iActive={sType === sActiveType[idx] ? iActive : -1}\n                        />\n                    ))}\n                </div>\n\n                <div className=\"content\" onClick={clickNewCollection}>\n                    <i className=\"icon-library-add\"></i>\n                    <span>New Collection</span>\n                </div>\n            </div>\n        </Provider>\n    );\n};\n\nexport default Category;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nconst Tool = () => {\n    return (\n        <div id=\"Tool\" className=\"content\">\n            <div>\n                <FontAwesomeIcon icon={faGithub} />\n            </div>\n            <div>\n                <i className=\"icon-delete\"></i>\n                <i className=\"icon-start\"></i>\n                <i className=\"icon-add\"></i>\n            </div>\n        </div>\n    );\n};\n\nexport default Tool;\n","import React from 'react';\nimport { vItemInput } from './Items';\n\nconst Item = (props: vItemInput) => {\n    const { title, content, bStarred } = props;\n    return (\n        <>\n            <h3>{title}</h3>\n            {bStarred && <i className=\"icon-start\"></i>}\n            <p>{content}</p>\n        </>\n    );\n};\n\nexport default Item;\n","import React, { useContext, useEffect, useState } from 'react';\nimport Item from './Item';\nimport NoteContext, { sActiveType } from '../../context/NoteContext';\n\nexport interface vItemInput {\n    title: string;\n    content: string;\n    bStarred: boolean;\n}\n\nconst Items = () => {\n    //context\n    const { vData, setiData, iData, iActive, sType, vCollection } = useContext(NoteContext);\n\n    // state\n    const [vShowData, setvShowData] = useState<number[]>([]);\n    useEffect(() => {\n        let vNewData: number[] = [];\n        switch (sType) {\n            case sActiveType[1]:\n                vNewData = Object.keys(vData)\n                    .filter((id) => {\n                        return (\n                            !vData[parseInt(id)].trash && vData[parseInt(id)].collection === vCollection[iActive].id\n                        );\n                    })\n                    .map((id) => parseInt(id));\n                break;\n            case sActiveType[0]:\n            case sActiveType[2]:\n                vNewData = [iActive];\n                break;\n            default:\n                break;\n        }\n\n        setvShowData(vNewData);\n    }, [sType, iActive]);\n\n    return (\n        <div id=\"Items\" className=\"scrollbarCol\">\n            {vShowData.map((id) => {\n                const className = iData === id ? 'active' : '';\n                const title = vData[id].name;\n                const bStarred = vData[id].starred;\n                const content = 'The note with a star would be organized to the category named “STARRED”.';\n                return (\n                    <div key={id} className={`content ${className}`} onClick={() => setiData(id)}>\n                        <Item title={title} content={content} bStarred={bStarred} />\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default Items;\n","import React from 'react';\n\nconst Filter = () => {\n    return <>Filter</>;\n};\n\nexport default Filter;\n","import React from 'react';\n\nimport Tool from './Tool';\nimport Items from './Items';\nimport Filter from './Filter';\n\nconst Directory = () => {\n    return (\n        <div id=\"Directory\">\n            <Tool />\n            <Items />\n            <Filter />\n        </div>\n    );\n};\n\nexport default Directory;\n","// import react, react-markdown-editor-lite, and a markdown parser you like\nimport React, { useState, useContext, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\n// import style manually\nimport 'react-markdown-editor-lite/lib/index.css';\n\nimport NoteContext from '../../context/NoteContext';\n\n// Register plugins if required\n// MdEditor.use(YOUR_PLUGINS_HERE);\n\n// Initialize a markdown parser\nconst mdParser = new MarkdownIt({ breaks: true });\n\ninterface Type {\n    html: string;\n    text: string;\n}\n\nconst Note = () => {\n    //context\n    const { iData, vData, setvData } = useContext(NoteContext);\n\n    //state\n    const [vAlue, setvAlue] = useState('# TiTle');\n\n    function handleEditorChange({ html, text }: Type) {\n        const vNewData = JSON.parse(JSON.stringify(vData));\n        const title = html.split('<h1>')[1]?.split('</h1>')[0];\n        vNewData[iData].name = title;\n        vNewData[iData].content = text;\n        vNewData[iData].updated_date = '2021/02/07 13:45';\n        setvData(vNewData);\n        setvAlue(text);\n    }\n\n    useEffect(() => {\n        setvAlue(vData[iData].content);\n    }, [iData]);\n\n    return (\n        <MdEditor\n            id=\"Note\"\n            value={vAlue}\n            style={{ height: '100vh', width: 'calc( 100vw - 500px )' }}\n            renderHTML={(text) => mdParser.render(`${text}`)}\n            onChange={(e) => handleEditorChange(e)}\n        />\n    );\n};\n\nexport default Note;\n","import React, { useContext } from 'react';\nimport { createPortal } from 'react-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleNotch, faCheck, faTimes, faExclamation } from '@fortawesome/free-solid-svg-icons';\nimport BaseContext from '../../context/BaseContext';\n\n// iMsgType === 0 : Loading\nfunction Message() {\n    // context\n    const { bMsg, sMsg, sMsgTitle, iMsgType, setbMsg } = useContext(BaseContext);\n    const elMsg = document.getElementById('msg');\n\n    const clickBGtoClose = () => {\n        if (iMsgType === 0) return;\n        setbMsg(false);\n    };\n\n    const sEl = (\n        <div className=\"gray-back Black\" onClick={clickBGtoClose}>\n            <div className=\"msg-content\">\n                {iMsgType !== 0 && (\n                    <div className=\"title-block\">\n                        <div className=\"title\">{sMsgTitle}</div>\n                        <i className=\"icon-add\" onClick={() => setbMsg(false)}></i>\n                    </div>\n                )}\n                <div className=\"content\">\n                    {iMsgType === 0 ? (\n                        <FontAwesomeIcon icon={faCircleNotch} spin />\n                    ) : iMsgType === 1 ? (\n                        <FontAwesomeIcon icon={faCheck} />\n                    ) : iMsgType === 2 ? (\n                        <FontAwesomeIcon icon={faTimes} />\n                    ) : iMsgType === 3 ? (\n                        <FontAwesomeIcon icon={faExclamation} />\n                    ) : (\n                        <></>\n                    )}\n                    {iMsgType === 0 ? <div>Loading</div> : sMsg}\n                </div>\n            </div>\n        </div>\n    );\n    return <>{bMsg && (!elMsg ? null : createPortal(sEl, elMsg))}</>;\n}\n\nexport default Message;\n","import React, { useContext } from 'react';\nimport { createPortal } from 'react-dom';\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport BaseContext from '../../context/BaseContext';\n\nfunction Modal() {\n    // modal element\n    const elModal = document.getElementById('modal');\n\n    // context\n    const { bModal, sModal, sModalTitle, setbModal } = useContext(BaseContext);\n\n    const sEl = (\n        <div className=\"gray-back Black\" >\n            <div className=\"modal-content\">\n                <div className=\"title-block\">\n                    <div className=\"title\">{sModalTitle}</div>\n                    <i className=\"icon-add\" onClick={()=>setbModal(false)}></i>\n                </div>\n                <div className=\"content\">{sModal}</div>\n            </div>\n        </div>\n    );\n\n    return <>{bModal && (!elModal ? null : createPortal(sEl, elModal))}</>;\n}\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport { Provider, sActiveType, vList, vDefault } from './context/NoteContext';\nimport { Provider as BaseProvider } from './context/BaseContext';\nimport { vData as vDataDefault } from './json/Data';\nimport Category from './components/category/Category';\nimport Directory from './components/directory/Directory';\nimport Note from './components/note/Note';\nimport Shortcut from './components/shortcut/Shortcut';\nimport Msg from './components/modal/Msg';\nimport Modal from './components/modal/Modal';\n\nfunction App() {\n    // modal & alert state\n    const [bModal, setbModal] = useState(false);\n    const [sModal, setsModal] = useState(<></>);\n    const [sModalTitle, setsModalTitle] = useState('');\n\n    const [bMsg, setbMsg] = useState(false);\n    const [sMsg, setsMsg] = useState(<></>);\n    const [sMsgTitle, setsMsgTitle] = useState('');\n    const [iMsgType, setiMsgType] = useState(1);\n\n    //state\n    const [iData, setiData] = useState(0); // note idx\n    const [vData, setvData] = useState(vDataDefault);\n    const [iActive, setiActive] = useState<number>(1); // category idx\n    const [sType, setsType] = useState<string>(sActiveType[0]); // category type\n    const [vCollection, setvCollection] = useState<vList[]>(vDefault);\n\n    const chooseItem = (sType: string, idx: number) => {\n        setsType(sType);\n        setiActive(idx);\n    };\n\n    // set msg / modal\n    // Loading : setAlert(\"Msg\", true, <></>, \"\", 0);\n    const setAlert = (\n        type: string, // \"Modal\" or \"Msg\"\n        bAlert: boolean, // show or not show\n        sAlert: JSX.Element = <></>, // content\n        sAlertTitle: string = '', // title\n        iMsgType: number = 1 // \"Msg\" icon type, discard this param when type === \"Modal\"\n    ) => {\n        if (type === 'Modal') {\n            setbModal(bAlert);\n            setsModal(sAlert);\n            setsModalTitle(sAlertTitle);\n        } else if (type === 'Msg') {\n            setbMsg(bAlert);\n            setsMsg(sAlert);\n            setsMsgTitle(sAlertTitle);\n            setiMsgType(iMsgType);\n        }\n    };\n\n    const vBaseContext = {\n        bModal,\n        bMsg,\n        sModal,\n        sMsg,\n        sModalTitle,\n        sMsgTitle,\n        iMsgType,\n        setiMsgType,\n        setbMsg,\n        setbModal,\n        setAlert,\n    };\n\n    const vContent = {\n        vData,\n        setvData,\n        iData: iData,\n        setiData,\n        iActive,\n        sType,\n        chooseItem,\n        vCollection,\n        setvCollection\n    };\n\n    return (\n        <BaseProvider value={vBaseContext}>\n            <Provider value={vContent}>\n                <div id=\"Wrap\" className=\"Black\">\n                    <Category />\n                    <Directory />\n                    <Note />\n                    {/* <Shortcut /> */}\n                </div>\n                <Msg />\n                <Modal />\n            </Provider>\n        </BaseProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./style/App.scss\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}