{"version":3,"sources":["components/category/Category.tsx","context/NoteContext.tsx","json/Data.tsx","context/CategoryContext.tsx","components/category/List.tsx","components/directory/Tool.tsx","components/directory/Item.tsx","components/directory/Items.tsx","components/directory/Filter.tsx","components/directory/Directory.tsx","components/note/Note.tsx","App.tsx","index.tsx"],"names":["sActiveType","NoteContext","createContext","vData","setvData","x","iData","setiData","Provider","Consumer","0","name","collection","starred","updated_date","created_date","content","1","2","3","4","CategoryContext","chooseItem","sType","idx","vCollection","List","props","sTitle","Icon","vList","iActive","useContext","useState","bShow","setbShow","className","onClick","prevState","length","map","sList","vIcon","Category","setiActive","setsType","ContexntValue","value","id","src","alt","type","icon","Tool","Item","title","bStarred","Items","Object","keys","parseInt","iId","Filter","Directory","mdParser","MarkdownIt","breaks","Note","vAlue","setvAlue","useEffect","style","height","width","renderHTML","text","render","onChange","e","html","vNewData","JSON","parse","stringify","split","handleEditorChange","App","vDataDefault","Content","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.997110ae.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Provider } from '../../context/CategoryContext';\nimport List from './List';\n\nenum sActiveType {\n    STARRED,\n    COLLECTIONS,\n    TRASH,\n    NONE,\n}\n\nconst vIcon = [<i className=\"icon-start\"></i>, <i className=\"icon-description\"></i>, <i className=\"icon-remove\"></i>];\nexport interface ListInput {\n    sTitle: string;\n    Icon: JSX.Element;\n    vList: string[];\n    iActive: number;\n}\n\nconst Category = () => {\n    const [iActive, setiActive] = useState<number>(1);\n    const [sType, setsType] = useState<string>(sActiveType[0]);\n    const [vCollection, setvCollection] = useState(['Home', 'Work', 'Project']);\n\n    const chooseItem = (sType: string, idx: number) => {\n        setsType(sType);\n        setiActive(idx);\n    };\n\n    const ContexntValue = {\n        chooseItem,\n        vCollection,\n    };\n\n    return (\n        <Provider value={ContexntValue}>\n            <div id=\"Category\">\n                <div className=\"title content\">\n                    <img src=\"img/Path 94.svg\" alt=\"\" />\n                    <label id=\"theme\">\n                        <input type=\"checkbox\" />\n                        <div></div>\n                    </label>\n                </div>\n                <div className=\"content scrollbarCol\">\n                    {vIcon.map((icon, idx) => (\n                        <List\n                            key={idx}\n                            sTitle={sActiveType[idx]}\n                            Icon={icon}\n                            vList={sActiveType[1] === sActiveType[idx] ? vCollection : []}\n                            iActive={sType === sActiveType[idx] ? iActive : -1}\n                        />\n                    ))}\n                </div>\n\n                <div className=\"content\">\n                    <i className=\"icon-library-add\"></i>\n                    <span>New Collection</span>\n                </div>\n            </div>\n        </Provider>\n    );\n};\n\nexport default Category;\n","import React, { createContext } from 'react';\nimport { DataType } from '../json/Data';\n\nconst NoteContext = createContext({\n    vData: {} as DataType,\n    setvData: (x: DataType) => {},\n    iData: -1,\n    setiData: (x: number) => {},\n});\n\nexport const { Provider, Consumer } = NoteContext;\nexport default NoteContext;\n","import React from 'react';\n\nexport interface DataType {\n    [x: number]: {\n        name: string;\n        collection: string;\n        starred: boolean;\n        updated_date: string;\n        created_date: string;\n        content: string;\n    };\n}\n\nexport const vCategory = ['Home', 'Work', 'Project'];\n\nexport const vData: DataType = {\n    0: {\n        name: 'Untitle note',\n        collection: 'Project',\n        starred: false,\n        updated_date: '2021/02/07 13:45',\n        created_date: '2021/02/01 11:00',\n        content: \n        `# Untitle note \n## string`,\n    },\n    1: {\n        name: 'Note with star',\n        collection: 'Project',\n        starred: true,\n        updated_date: '2021/02/07 13:45',\n        created_date: '2021/02/01 11:00',\n        content: `# Note with star \n## string`,\n    },\n    2: {\n        name: 'Heading: The biggest title',\n        collection: 'Project',\n        starred: true,\n        updated_date: '2021/02/05 13:45',\n        created_date: '2021/02/04 11:00',\n        content: `# Heading: The biggest title \n## string`,\n    },\n    3: {\n        name: 'Untitle note',\n        collection: 'Project',\n        starred: false,\n        updated_date: '2021/02/03 13:45',\n        created_date: '2021/02/03 11:00',\n        content: `# Untitle note \n## string`,\n    },\n    4: {\n        name: 'Untitle note',\n        collection: 'Project',\n        starred: false,\n        updated_date: '2021/02/07 13:45',\n        created_date: '2021/02/01 11:00',\n        content: `# Untitle note \n## string`,\n    },\n};\n","import React, { createContext } from 'react';\n\nconst CategoryContext = createContext({\n    chooseItem: (sType: string, idx: number) => {},\n    vCollection: [] as string[],\n});\n\nexport const { Provider, Consumer } = CategoryContext;\nexport default CategoryContext;\n","import React, { useState, useContext } from 'react';\nimport CategoryContext from '../../context/CategoryContext';\n\nimport { ListInput } from './Category';\n\nconst List = (props: ListInput) => {\n    // props\n    const { sTitle, Icon, vList, iActive } = props;\n\n    //context\n    const { chooseItem } = useContext(CategoryContext);\n\n    //state\n    const [bShow, setbShow] = useState<boolean>(true);\n\n    const clickShow = () => {\n        setbShow((prevState) => !prevState);\n    };\n\n    return (\n        <div className=\"List\">\n            <div className=\"vice-title\" onClick={clickShow}>\n                <h4>{sTitle}</h4>\n                {bShow ? <i className=\"icon-arrow-up\"></i> : <i className=\"icon-arrow-down\"></i>}\n            </div>\n            <ul>\n                {vList.length > 0 &&\n                    bShow &&\n                    vList.map((sList, idx) => (\n                        <li\n                            key={idx}\n                            onClick={() => chooseItem(sTitle, idx)}\n                            className={idx === iActive ? 'active' : ''}\n                        >\n                            {Icon}\n                            <span>{sList}</span>\n                        </li>\n                    ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default List;\n","import React from 'react';\n\nconst Tool = () => {\n    return (\n        <div id=\"Tool\" className=\"content\">\n            <div>\n                <i className=\"icon-view-comfy\"></i>\n                <i className=\"icon-view-stream unactive\"></i>\n            </div>\n            <div>\n                <i className=\"icon-delete\"></i>\n                <i className=\"icon-start\"></i>\n                <i className=\"icon-add\"></i>\n            </div>\n        </div>\n    );\n};\n\nexport default Tool;\n","import React from 'react';\nimport { vItemInput } from './Items';\n\nconst Item = (props: vItemInput) => {\n    const { title, content, bStarred } = props;\n    return (\n        <>\n            <h3>{title}</h3>\n            {bStarred && <i className=\"icon-start\"></i>}\n            <p>{content}</p>\n        </>\n    );\n};\n\nexport default Item;\n","import React, { useContext } from 'react';\nimport Item from './Item';\nimport NoteContext from '../../context/NoteContext';\n\nexport interface vItemInput {\n    title: string;\n    content: string;\n    bStarred: boolean;\n}\n\nconst Items = () => {\n    //context\n    const { vData, setiData, iData } = useContext(NoteContext);\n\n    return (\n        <div id=\"Items\" className=\"scrollbarCol\">\n            {Object.keys(vData).map((id) => {\n                const className = iData === parseInt(id) ? 'active' : '';\n                const iId = parseInt(id);\n                const title = vData[iId].name;\n                const bStarred = vData[iId].starred;\n                const content = 'The note with a star would be organized to the category named “STARRED”.';\n                return (\n                    <div key={id} className={`content ${className}`} onClick={() => setiData(parseInt(id))}>\n                        <Item title={title} content={content} bStarred={bStarred}/>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default Items;\n","import React from 'react';\n\nconst Filter = () => {\n    return <>Filter</>;\n};\n\nexport default Filter;\n","import React from 'react';\n\nimport Tool from './Tool';\nimport Items from './Items';\nimport Filter from './Filter';\n\nconst Directory = () => {\n    return (\n        <div id=\"Directory\">\n            <Tool />\n            <Items />\n            <Filter />\n        </div>\n    );\n};\n\nexport default Directory;\n","// import react, react-markdown-editor-lite, and a markdown parser you like\nimport React, { useState, useContext, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\n// import style manually\nimport 'react-markdown-editor-lite/lib/index.css';\n\nimport NoteContext from '../../context/NoteContext';\n\n// Register plugins if required\n// MdEditor.use(YOUR_PLUGINS_HERE);\n\n// Initialize a markdown parser\nconst mdParser = new MarkdownIt({ breaks: true });\n\ninterface Type {\n    html: string;\n    text: string;\n}\n\nconst Note = () => {\n    //context\n    const { iData, vData, setvData } = useContext(NoteContext);\n\n    //state\n    const [vAlue, setvAlue] = useState('# TiTle');\n\n    function handleEditorChange({ html, text }: Type) {\n        const vNewData = JSON.parse(JSON.stringify(vData));\n        const title = html.split('<h1>')[1]?.split('</h1>')[0];\n        vNewData[iData].name = title;\n        vNewData[iData].content = text;\n        vNewData[iData].updated_date = '2021/02/07 13:45';\n        setvData(vNewData);\n        setvAlue(text);\n    }\n\n    useEffect(() => {\n        setvAlue(vData[iData].content);\n    }, [iData]);\n\n    return (\n        <MdEditor\n            id=\"Note\"\n            value={vAlue}\n            style={{ height: '100vh', width: 'calc( 100vw - 500px )' }}\n            renderHTML={(text) => mdParser.render(`${text}`)}\n            onChange={(e) => handleEditorChange(e)}\n        />\n    );\n};\n\nexport default Note;\n","import React, { useState } from 'react';\nimport { Provider } from './context/NoteContext';\nimport { vData as vDataDefault } from './json/Data';\nimport Category from './components/category/Category';\nimport Directory from './components/directory/Directory';\nimport Note from './components/note/Note';\nimport Shortcut from './components/shortcut/Shortcut';\n\nfunction App() {\n    //state\n    const [iData, setiData] = useState(0);\n    const [vData, setvData] = useState(vDataDefault);\n\n    const Content = {\n        vData,\n        setvData,\n        iData: iData,\n        setiData,\n    };\n\n    return (\n        <Provider value={Content}>\n            <div id=\"Wrap\" className=\"Black\">\n                <Category />\n                <Directory />\n                <Note />\n                {/* <Shortcut /> */}\n            </div>\n        </Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./style/App.scss\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}