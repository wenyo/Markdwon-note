{"version":3,"sources":["context/NoteContext.tsx","context/BaseContext.tsx","json/Data.tsx","context/CategoryContext.tsx","components/category/List.tsx","components/category/Category.tsx","components/directory/Tool.tsx","components/directory/Item.tsx","components/directory/Items.tsx","components/directory/Filter.tsx","components/directory/Directory.tsx","components/note/Note.tsx","components/modal/Msg.tsx","components/modal/Modal.tsx","App.tsx","index.tsx"],"names":["sActiveType","vCollectionData","name","NoteContext","createContext","vData","setvData","x","iData","setiData","iActive","sType","chooseItem","idx","vCollection","setvCollection","vStarr","setvStarr","vTrash","setvTrash","setvCollectionData","Provider","Consumer","BaseContext","bModal","sModal","sModalTitle","setbModal","bMsg","sMsg","sMsgTitle","iMsgType","setiMsgType","setbMsg","setAlert","type","bAlert","0","collection","starred","trash","updated_date","created_date","content","1","CategoryContext","List","props","sTitle","Icon","vList","useContext","useState","bShow","setbShow","className","onClick","prevState","length","map","id","parseInt","vIcon","Category","sNewCollection","setsNewCollection","ContexntValue","addCollection","vNewCollectionData","JSON","parse","stringify","push","toString","renewAlert","value","onChange","event","sNewValue","currentTarget","indexOf","textCollection","useEffect","vNewStarr","vNewTrash","data","src","alt","icon","Tool","sNoteName","setsNoteName","iChooseColect","setiChooseColect","textNote","addNote","vNewData","vNewDataKey","Object","keys","faGithub","Item","title","bStarred","Items","vShowData","setvShowData","filter","iNewData","Filter","Directory","mdParser","MarkdownIt","breaks","Note","sValue","setsValue","style","height","width","renderHTML","text","render","e","html","split","handleEditorChange","Message","elMsg","document","getElementById","sEl","faCircleNotch","spin","faCheck","faTimes","faExclamation","createPortal","Modal","elModal","App","setsModal","setsModalTitle","setsMsg","setsMsgTitle","vDataDefault","setiActive","setsType","vCollectionDataContext","bGetData","setbGetData","vBaseContext","sAlert","sAlertTitle","vContent","sSaveData","localStorage","getItem","sCollectionData","vSaveData","sNote","setItem","Msg","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.76e12337.chunk.js","sourcesContent":["import React, { createContext } from 'react';\nimport { DataType } from '../json/Data';\n\nexport interface vList {\n    name: string;\n    id?: number;\n}\n\nexport enum sActiveType {\n    STARRED,\n    COLLECTIONS,\n    TRASH,\n    NONE,\n}\n\nexport const vDefault: vList[] = [\n    { name: 'Home', id: 0 },\n    { name: 'Work', id: 1 },\n    { name: 'Project', id: 2 },\n];\n\nexport const vCollectionData: vList[] = [{ name: 'Home' }, { name: 'Work' }, { name: 'Project' }];\n\nconst NoteContext = createContext({\n    vData: {} as DataType,\n    setvData: (x: DataType) => {},\n    iData: -1,\n    setiData: (x: number) => {},\n    iActive: -1,\n    sType: sActiveType[0],\n    chooseItem: (sType: string, idx: number) => {},\n    vCollection: [] as string[],\n    setvCollection: (x: string[]) => {},\n    vStarr: [] as string[],\n    setvStarr: (x: string[]) => {},\n    vTrash: [] as string[],\n    setvTrash: (x: string[]) => {},\n    vCollectionData,\n    setvCollectionData: (x:vList[]) => {},\n});\n\nexport const { Provider, Consumer } = NoteContext;\nexport default NoteContext;\n","import React, { createContext } from 'react';\nconst BaseContext = createContext({\n    bModal: false,\n    sModal: <></>,\n    sModalTitle: '',\n    setbModal: (x: boolean) => {},\n\n    bMsg: false,\n    sMsg: <></>,\n    sMsgTitle: '',\n    iMsgType: 1,\n    setiMsgType: (x: number) => {},\n    setbMsg: (x: boolean) => {},\n    setAlert: (\n        type: string,\n        bAlert: boolean,\n        sAlert: JSX.Element = <></>,\n        sAlertTitle: string = '',\n        iMsgType: number = 1\n    ) => {},\n});\n\nexport const { Provider } = BaseContext;\nexport default BaseContext;\n","import React from 'react';\n\nexport interface DataType {\n    [x: number]: {\n        name: string;\n        collection: number; // use id , not name\n        starred: boolean;\n        trash: boolean;\n        updated_date: string;\n        created_date: string;\n        content: string;\n    };\n}\n\nexport const vCategory = ['Home', 'Work', 'Project'];\n\nexport const vData: DataType = {\n    0: {\n        name: 'Heading: The biggest title',\n        collection: 2,\n        starred: true,\n        trash: false,\n        updated_date: '2021/02/05 13:45',\n        created_date: '2021/02/04 11:00',\n        content:\n            `# Heading: The biggest title \nThis is the body text area. The font size of the paragraph should be 16 px, and the line height is 24 px.\n## Subtitle\n* First bullet list \n* second bullet list \n* italic bullet list\n### Minor Title\n1. First number list \n1. second number list \n1. bold number list\n### Minor Title\n---\n> Quote: to repeat the words that someone else has said or written. Translated from Cambridge University Press\n## Subtitle\n[Markdown-Note](https://wenyo.github.io/Markdwon-note/)\nYou can insert a link into a word in the paragraph, and it would be colored in blue. Or just paste the website link to the note.\n![forest](https://ppt.cc/fTFpex@.jpg)\nCompare the difference between ` +\n            '`' +\n            `{code text} ` +\n            '`' +\n            ` and:\\n` +\n            '`{ “type”: code area }\\n`',\n    },\n    1: {\n        name: 'Note with star',\n        collection: 2,\n        starred: true,\n        trash: false,\n        updated_date: '2021/02/07 13:45',\n        created_date: '2021/02/01 11:00',\n        content: `# Note with star \n## string`,\n    },\n};\n","import React, { createContext } from 'react';\nimport { vList } from './NoteContext';\n\nconst CategoryContext = createContext({\n    vCollection: [] as string[],\n});\n\nexport const { Provider, Consumer } = CategoryContext;\nexport default CategoryContext;\n","import React, { useState, useContext } from 'react';\nimport NoteContext from '../../context/NoteContext';\n\nimport { ListInput } from './Category';\n\nconst List = (props: ListInput) => {\n    // props\n    const { sTitle, Icon, vList, iActive, vData } = props;\n    \n    //context\n    const { chooseItem } = useContext(NoteContext);\n\n    //state\n    const [bShow, setbShow] = useState<boolean>(true);\n\n    const clickShow = () => {\n        setbShow((prevState) => !prevState);\n    };\n\n    return (\n        <div className=\"List\">\n            <div className=\"vice-title\" onClick={clickShow}>\n                <h4>{sTitle}</h4>\n                {bShow ? <i className=\"icon-arrow-up\"></i> : <i className=\"icon-arrow-down\"></i>}\n            </div>\n            <ul>\n                {vList.length > 0 &&\n                    bShow &&\n                    vList.map((id) => (\n                        <li\n                            key={id}\n                            onClick={() => chooseItem(sTitle, parseInt(id))}\n                            className={parseInt(id) === iActive ? 'active' : ''}\n                        >\n                            {Icon}\n                            <span>{vData[parseInt(id)].name}</span>\n                        </li>\n                    ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default List;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Provider } from '../../context/CategoryContext';\nimport List from './List';\nimport NoteContext, { sActiveType } from '../../context/NoteContext';\nimport BaseContext from '../../context/BaseContext';\n\ninterface vDataType {\n    [x: number]: {\n        name: string;\n        [x: number]: any;\n    };\n}\n\nconst vIcon = [<i className=\"icon-start\"></i>, <i className=\"icon-description\"></i>, <i className=\"icon-remove\"></i>];\n\nexport interface ListInput {\n    sTitle: string;\n    Icon: JSX.Element;\n    vList: string[];\n    iActive: number;\n    vData: vDataType;\n}\n\nconst Category = () => {\n    // context\n    const { setAlert, bModal } = useContext(BaseContext);\n    const {\n        vData,\n        iActive,\n        sType,\n        vCollection,\n        setvCollection,\n        vStarr,\n        setvStarr,\n        vTrash,\n        setvTrash,\n        setvCollectionData,\n        vCollectionData,\n    } = useContext(NoteContext);\n\n    // state\n    const [sNewCollection, setsNewCollection] = useState('');\n\n    const ContexntValue = {\n        vCollection,\n    };\n\n    const addCollection = () => {\n        if (sNewCollection === '') return;\n        let vNewCollectionData = JSON.parse(JSON.stringify(vCollectionData));\n        vNewCollectionData.push({ name: sNewCollection });\n        vCollection.push(vCollection.length.toString());\n        setvCollectionData(vNewCollectionData);\n        setvCollection(vCollection);\n        setAlert('Modal', false);\n    };\n\n    const textCollection = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const sNewValue = event.currentTarget.value;\n        if (`'\"`.indexOf(sNewValue[sNewValue.length - 1]) > -1) return;\n        setsNewCollection(sNewValue);\n    };\n\n    const renewAlert = () => {\n        setAlert(\n            'Modal',\n            true,\n            <div className=\"content_row\">\n                <input\n                    className=\"input-text\"\n                    type=\"text\"\n                    value={sNewCollection}\n                    onChange={(event) => textCollection(event)}\n                />\n                <button className=\"btn-outline\" onClick={addCollection}>\n                    SUBMIT\n                </button>\n            </div>,\n            'New Collection'\n        );\n    };\n\n    const clickNewCollection = () => {\n        renewAlert();\n    };\n\n    useEffect(() => {\n        let vNewStarr: string[] = [];\n        let vNewTrash: string[] = [];\n        for (const id in vData) {\n            const data = vData[id];\n            if (data.trash) {\n                vNewTrash.push(id);\n            } else if (data.starred) {\n                vNewStarr.push(id);\n            }\n        }\n        setvTrash(vNewTrash);\n        setvStarr(vNewStarr);\n    }, [vData]);\n\n    useEffect(() => {\n        if (bModal) {\n            renewAlert();\n        }\n    }, [sNewCollection]);\n\n    return (\n        <Provider value={ContexntValue}>\n            <div id=\"Category\">\n                <div className=\"title content\">\n                    <img src=\"img/Path 94.svg\" alt=\"\" />\n                    <label id=\"theme\">\n                        <input type=\"checkbox\" />\n                        <div></div>\n                    </label>\n                </div>\n                <div className=\"content scrollbarCol\">\n                    {vIcon.map((icon, idx) => (\n                        <List\n                            key={idx}\n                            sTitle={sActiveType[idx]}\n                            Icon={icon}\n                            vList={\n                                sActiveType[0] === sActiveType[idx]\n                                    ? vStarr\n                                    : sActiveType[1] === sActiveType[idx]\n                                    ? vCollection\n                                    : sActiveType[2] === sActiveType[idx]\n                                    ? vTrash\n                                    : []\n                            }\n                            vData={\n                                sActiveType[0] === sActiveType[idx]\n                                    ? vData\n                                    : sActiveType[1] === sActiveType[idx]\n                                    ? vCollectionData\n                                    : sActiveType[2] === sActiveType[idx]\n                                    ? vData\n                                    : []\n                            }\n                            iActive={sType === sActiveType[idx] ? iActive : -1}\n                        />\n                    ))}\n                </div>\n\n                <div className=\"content\" onClick={clickNewCollection}>\n                    <i className=\"icon-library-add\"></i>\n                    <span>New Collection</span>\n                </div>\n            </div>\n        </Provider>\n    );\n};\n\nexport default Category;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport NoteContext from '../../context/NoteContext';\nimport BaseContext from '../../context/BaseContext';\n\nconst Tool = () => {\n    // context\n    const { setAlert, bModal } = useContext(BaseContext);\n    const { iData, vData, setvData, vCollectionData } = useContext(NoteContext);\n\n    // state\n    const [sNoteName, setsNoteName] = useState('');\n    const [iChooseColect, setiChooseColect] = useState(0);\n\n    const clickStar = () => {\n        let vNewData = JSON.parse(JSON.stringify(vData));\n        vNewData[iData].starred = !vNewData[iData].starred;\n        setvData(vNewData);\n    };\n\n    const clickTrash = () => {\n        let vNewData = JSON.parse(JSON.stringify(vData));\n        vNewData[iData].trash = !vNewData[iData].trash;\n        vNewData[iData].starred = false;\n        setvData(vNewData);\n    };\n\n    const textNote = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const sNewValue = event.currentTarget.value;\n        if (`'\"`.indexOf(sNewValue[sNewValue.length - 1]) > -1) return;\n        setsNoteName(sNewValue);\n    };\n\n    const renewAlert = () => {\n        setAlert(\n            'Modal',\n            true,\n            <div className=\"content_column\">\n                <label>\n                    <span>Collection /</span>\n                    <select\n                        value={iChooseColect}\n                        onChange={(event) => setiChooseColect(parseInt(event.currentTarget.value))}\n                    >\n                        {vCollectionData.map(({ name }, idx) => (\n                            <option key={idx} value={idx}>\n                                {name}\n                            </option>\n                        ))}\n                    </select>\n                </label>\n                <label>\n                    <span>Note /</span>\n                    <input className=\"input-text\" type=\"text\" value={sNoteName} onChange={(event) => textNote(event)} />\n                </label>\n                <button className=\"btn-outline\" onClick={addNote}>\n                    SUBMIT\n                </button>\n            </div>,\n            'New Note'\n        );\n    };\n\n    const clickAdd = () => {\n        renewAlert();\n    };\n\n    const addNote = () => {\n        let vNewData = JSON.parse(JSON.stringify(vData));\n        const vNewDataKey = Object.keys(vNewData);\n        const iNewIdx: number = parseInt(vNewDataKey[vNewDataKey.length - 1]);\n        vNewData[iNewIdx] = {\n            name: sNoteName,\n            collection: iChooseColect,\n            starred: false,\n            trash: false,\n            updated_date: '2021/02/07 13:45',\n            created_date: '2021/02/01 11:00',\n            content: `# ${sNoteName}`,\n        };\n        setvData(vNewData);\n        setAlert('Modal', false);\n    };\n\n    useEffect(() => {\n        if (bModal) {\n            renewAlert();\n        }\n    }, [sNoteName, iChooseColect]);\n\n    return (\n        <div id=\"Tool\" className=\"content\">\n            <div>\n                <FontAwesomeIcon icon={faGithub} />\n            </div>\n            <div>\n                <i className=\"icon-delete\" onClick={clickTrash}></i>\n                <i className=\"icon-start\" onClick={clickStar}></i>\n                <i className=\"icon-add\" onClick={clickAdd}></i>\n            </div>\n        </div>\n    );\n};\n\nexport default Tool;\n","import React from 'react';\nimport { vItemInput } from './Items';\n\nconst Item = (props: vItemInput) => {\n    const { title, content, bStarred } = props;\n    return (\n        <>\n            <h3>{title}</h3>\n            {bStarred && <i className=\"icon-start\"></i>}\n            <p>{content}</p>\n        </>\n    );\n};\n\nexport default Item;\n","import React, { useContext, useEffect, useState } from 'react';\nimport Item from './Item';\nimport NoteContext, { sActiveType } from '../../context/NoteContext';\n\nexport interface vItemInput {\n    title: string;\n    content: string;\n    bStarred: boolean;\n}\n\nconst Items = () => {\n    //context\n    const { vData, setiData, iData, iActive, sType } = useContext(NoteContext);\n\n    // state\n    const [vShowData, setvShowData] = useState<number[]>([]);\n\n    useEffect(() => {\n        let vNewData: number[] = [];\n        switch (sType) {\n            case sActiveType[1]:\n                vNewData = Object.keys(vData)\n                    .filter((id) => {\n                        return !vData[parseInt(id)].trash && vData[parseInt(id)].collection === iActive;\n                    })\n                    .map((id) => parseInt(id));\n                break;\n            case sActiveType[0]:\n            case sActiveType[2]:\n                vNewData = [iActive];\n                break;\n            default:\n                break;\n        }\n        const iNewData = vNewData.length === 0 ? -1 : iData; // bug\n\n        setvShowData(vNewData);\n        setiData(iNewData);\n    }, [sType, iActive, vData]);\n\n    return (\n        <div id=\"Items\" className=\"scrollbarCol\">\n            {vShowData.map((id) => {\n                const className = iData === id ? 'active' : '';\n                const title = vData[id].name;\n                const bStarred = vData[id].starred;\n                const content = 'The note with a star would be organized to the category named “STARRED”.';\n                return (\n                    <div key={id} className={`content ${className}`} onClick={() => setiData(id)}>\n                        <Item title={title} content={content} bStarred={bStarred} />\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default Items;\n","import React from 'react';\n\nconst Filter = () => {\n    return <>Filter</>;\n};\n\nexport default Filter;\n","import React from 'react';\n\nimport Tool from './Tool';\nimport Items from './Items';\nimport Filter from './Filter';\n\nconst Directory = () => {\n    return (\n        <div id=\"Directory\">\n            <Tool />\n            <Items />\n            <Filter />\n        </div>\n    );\n};\n\nexport default Directory;\n","import { useState, useContext, useEffect } from 'react';\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\nimport 'react-markdown-editor-lite/lib/index.css';\nimport NoteContext from '../../context/NoteContext';\n\n// Initialize a markdown parser\nconst mdParser = new MarkdownIt({ breaks: true });\n\ninterface Type {\n    html: string;\n    text: string;\n}\n\nconst Note = () => {\n    //context\n    const { iData, vData, setvData } = useContext(NoteContext);\n\n    //state\n    const [sValue, setsValue] = useState('');\n\n    function handleEditorChange({ html, text }: Type) {\n        if (iData < 0) return;\n        const vNewData = JSON.parse(JSON.stringify(vData));\n        const title = html.split('<h1>')[1]?.split('</h1>')[0];\n        vNewData[iData].name = title;\n        vNewData[iData].content = text;\n        vNewData[iData].updated_date = '2021/02/07 13:45';\n        setvData(vNewData);\n        setsValue(text);\n    }\n\n    useEffect(() => {\n        if (iData < 0) {\n            setsValue('## Choese Note or Create Note first');\n        } else {\n            setsValue(vData[iData].content);\n        }\n    }, [iData]);\n\n    return (\n        <MdEditor\n            id=\"Note\"\n            value={sValue}\n            style={{ height: '100vh', width: 'calc( 100vw - 500px )' }}\n            renderHTML={(text) => mdParser.render(`${text}`)}\n            onChange={(e) => handleEditorChange(e)}\n        />\n    );\n};\n\nexport default Note;\n","import React, { useContext } from 'react';\nimport { createPortal } from 'react-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleNotch, faCheck, faTimes, faExclamation } from '@fortawesome/free-solid-svg-icons';\nimport BaseContext from '../../context/BaseContext';\n\n// iMsgType === 0 : Loading\nfunction Message() {\n    // context\n    const { bMsg, sMsg, sMsgTitle, iMsgType, setbMsg } = useContext(BaseContext);\n    const elMsg = document.getElementById('msg');\n\n    const clickBGtoClose = () => {\n        if (iMsgType === 0) return;\n        setbMsg(false);\n    };\n\n    const sEl = (\n        <div className=\"gray-back Black\" onClick={clickBGtoClose}>\n            <div className=\"msg-content\">\n                {iMsgType !== 0 && (\n                    <div className=\"title-block\">\n                        <div className=\"title\">{sMsgTitle}</div>\n                        <i className=\"icon-add\" onClick={() => setbMsg(false)}></i>\n                    </div>\n                )}\n                <div className=\"content\">\n                    {iMsgType === 0 ? (\n                        <FontAwesomeIcon icon={faCircleNotch} spin />\n                    ) : iMsgType === 1 ? (\n                        <FontAwesomeIcon icon={faCheck} />\n                    ) : iMsgType === 2 ? (\n                        <FontAwesomeIcon icon={faTimes} />\n                    ) : iMsgType === 3 ? (\n                        <FontAwesomeIcon icon={faExclamation} />\n                    ) : (\n                        <></>\n                    )}\n                    {iMsgType === 0 ? <div>Loading</div> : sMsg}\n                </div>\n            </div>\n        </div>\n    );\n    return <>{bMsg && (!elMsg ? null : createPortal(sEl, elMsg))}</>;\n}\n\nexport default Message;\n","import React, { useContext } from 'react';\nimport { createPortal } from 'react-dom';\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport BaseContext from '../../context/BaseContext';\n\nfunction Modal() {\n    // modal element\n    const elModal = document.getElementById('modal');\n\n    // context\n    const { bModal, sModal, sModalTitle, setbModal } = useContext(BaseContext);\n\n    const sEl = (\n        <div className=\"gray-back Black\" >\n            <div className=\"modal-content\">\n                <div className=\"title-block\">\n                    <div className=\"title\">{sModalTitle}</div>\n                    <i className=\"icon-add\" onClick={()=>setbModal(false)}></i>\n                </div>\n                <div className=\"content\">{sModal}</div>\n            </div>\n        </div>\n    );\n\n    return <>{bModal && (!elModal ? null : createPortal(sEl, elModal))}</>;\n}\n\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport { Provider, sActiveType, vCollectionData as vCollectionDataContext } from './context/NoteContext';\nimport { Provider as BaseProvider } from './context/BaseContext';\nimport { vData as vDataDefault } from './json/Data';\nimport Category from './components/category/Category';\nimport Directory from './components/directory/Directory';\nimport Note from './components/note/Note';\nimport Msg from './components/modal/Msg';\nimport Modal from './components/modal/Modal';\n\nfunction App() {\n    // modal & alert state\n    const [bModal, setbModal] = useState(false);\n    const [sModal, setsModal] = useState(<></>);\n    const [sModalTitle, setsModalTitle] = useState('');\n\n    const [bMsg, setbMsg] = useState(false);\n    const [sMsg, setsMsg] = useState(<></>);\n    const [sMsgTitle, setsMsgTitle] = useState('');\n    const [iMsgType, setiMsgType] = useState(1);\n\n    //state\n    const [iData, setiData] = useState(-1); // note idx\n    const [vData, setvData] = useState(vDataDefault);\n    const [iActive, setiActive] = useState<number>(2); // category idx\n    const [sType, setsType] = useState<string>(sActiveType[1]); // category type\n    const [vCollectionData, setvCollectionData] = useState(vCollectionDataContext);\n    const [vCollection, setvCollection] = useState<string[]>(Object.keys(vCollectionData));\n    const [vStarr, setvStarr] = useState<string[]>([]);\n    const [vTrash, setvTrash] = useState<string[]>([]);\n    const [bGetData, setbGetData] = useState<boolean>(false);\n\n    const chooseItem = (sType: string, idx: number) => {\n        setsType(sType);\n        setiActive(idx);\n    };\n\n    // set msg / modal\n    // Loading : setAlert(\"Msg\", true, <></>, \"\", 0);\n    const setAlert = (\n        type: string, // \"Modal\" or \"Msg\"\n        bAlert: boolean, // show or not show\n        sAlert: JSX.Element = <></>, // content\n        sAlertTitle: string = '', // title\n        iMsgType: number = 1 // \"Msg\" icon type, discard this param when type === \"Modal\"\n    ) => {\n        if (type === 'Modal') {\n            setbModal(bAlert);\n            setsModal(sAlert);\n            setsModalTitle(sAlertTitle);\n        } else if (type === 'Msg') {\n            setbMsg(bAlert);\n            setsMsg(sAlert);\n            setsMsgTitle(sAlertTitle);\n            setiMsgType(iMsgType);\n        }\n    };\n\n    const vBaseContext = {\n        bModal,\n        bMsg,\n        sModal,\n        sMsg,\n        sModalTitle,\n        sMsgTitle,\n        iMsgType,\n        setiMsgType,\n        setbMsg,\n        setbModal,\n        setAlert,\n    };\n\n    const vContent = {\n        vData,\n        setvData,\n        iData: iData,\n        setiData,\n        iActive,\n        sType,\n        chooseItem,\n        vCollection,\n        setvCollection,\n        vStarr,\n        setvStarr,\n        vTrash,\n        setvTrash,\n        vCollectionData,\n        setvCollectionData,\n    };\n\n    useEffect(() => {\n        const sSaveData = localStorage.getItem('note');\n        const sCollectionData = localStorage.getItem('collection');\n        if (sSaveData) {\n            const vSaveData = JSON.parse(sSaveData);\n            setvData(vSaveData);\n            setbGetData(true);\n        }\n        if (sCollectionData) {\n            const vCollectionData = JSON.parse(sCollectionData);\n            setvCollectionData(vCollectionData);\n        }\n        setvCollection(Object.keys(vCollectionData));\n    }, []);\n\n    useEffect(() => {\n        if (bGetData) {\n            const sNote = JSON.stringify(vData);\n            localStorage.setItem('note', sNote);\n        }\n    }, [vData]);\n\n    useEffect(() => {\n        if (bGetData) {\n            const sCollectionData = JSON.stringify(vCollectionData);\n            localStorage.setItem('collection', sCollectionData);\n            setvCollection(Object.keys(vCollectionData));\n        }\n    }, [vCollectionData]);\n\n    return (\n        <BaseProvider value={vBaseContext}>\n            <Provider value={vContent}>\n                <div id=\"Wrap\" className=\"Black\">\n                    <Category />\n                    <Directory />\n                    <Note />\n                    {/* <Shortcut /> */}\n                </div>\n                <Msg />\n                <Modal />\n            </Provider>\n        </BaseProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./style/App.scss\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}